// <auto-generated />
using System;
using ExcelenciaD_API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ExcelenciaD_API.Migrations
{
    [DbContext(typeof(AplicationDbContext))]
    [Migration("20240226201233_llenar")]
    partial class llenar
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ExcelenciaD_API.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "casita 444",
                            City = "Santiago del Estero",
                            Country = "Argentina",
                            Email = "emaildeprueba@prueba.com",
                            LastName = "Casagrande",
                            Name = "Claudio David",
                            Phone = "3854023721",
                            RegisterDate = new DateTime(2024, 2, 26, 17, 12, 30, 544, DateTimeKind.Local).AddTicks(1140)
                        },
                        new
                        {
                            Id = 2,
                            Address = "Casa de lucas",
                            City = "Cordoba",
                            Country = "Argentina",
                            Email = "pruebadelucas@mail.com",
                            LastName = "Maldonado",
                            Name = "Lucas",
                            Phone = "3854037772",
                            RegisterDate = new DateTime(2024, 2, 26, 17, 12, 30, 544, DateTimeKind.Local).AddTicks(1178)
                        },
                        new
                        {
                            Id = 3,
                            Address = "Casa de nahuel",
                            City = "Buenos Aires",
                            Country = "Argentina",
                            Email = "maildenahuel@mail.com",
                            LastName = "Leal",
                            Name = "Nahuel",
                            Phone = "3859842345",
                            RegisterDate = new DateTime(2024, 2, 26, 17, 12, 30, 544, DateTimeKind.Local).AddTicks(1187)
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
